name: Cypress Tests

on:
  push:
    branches:
      - master

jobs:
  run-tests-group-1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests - Group 1
        run: npx cypress run --spec "cypress/e2e/Bank/test.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports,reportFilename=mochawesome-test1.json

      - name: Upload Group 1 report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-group-1
          path: cypress/reports/*.json

  run-tests-group-2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests - Group 2
        run: npx cypress run --spec "cypress/e2e/Bank/test2.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports,reportFilename=mochawesome-test2.json

      - name: Upload Group 2 report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report-group-2
          path: cypress/reports/*.json

  merge-reports:
    runs-on: ubuntu-latest
    needs: [run-tests-group-1, run-tests-group-2]
    if: ${{ always() }} # Run this step regardless of the test group status
    steps:
      - name: Download report artifacts - Group 1
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: report-group-1
          path: cypress/reports

      - name: Download report artifacts - Group 2
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: report-group-2
          path: cypress/reports

      - name: Install mochawesome-merge
        run: npm install -g mochawesome-merge

      - name: Install mochawesome-report-generator
        run: npm install mochawesome-report-generator --save-dev

      - name: Merge Reports
        run: |
          mochawesome-merge cypress/reports/*.json > cypress/reports/merged-report.json

      - name: Convert Mochawesome JSON to Allure XML
        run: |
          npx mochawesome-report-generator cypress/reports/merged-report.json -o cypress/allure-results --reportTitle "Test Report" --reportPageTitle "Cypress Allure Report"

      - name: Generate Allure HTML Report
        run: |
          allure generate cypress/allure-results --clean -o allure-report --disable-plugins

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
